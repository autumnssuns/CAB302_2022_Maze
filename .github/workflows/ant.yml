# This workflow will build a Java project with Ant
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-ant

name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Prepare output directories
      run: ant -lib lib -noinput -buildfile build.xml prepare
    - name: Compile source code
      run: ant -lib lib -noinput -buildfile build.xml compile
    - name: Running tests
      run: ant -lib lib -noinput -buildfile build.xml test
    - name: Package artifacts
      run: ant -lib lib -noinput -buildfile build.xml build
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MazeGen
        path: /home/runner/work/CAB302_2022_Maze/CAB302_2022_Maze/build/program/MazeGen.jar
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: MazeGen
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /home/runner/work/CAB302_2022_Maze/CAB302_2022_Maze/build/program/MazeGen.jar
        asset_name: MazeGen.jar
        asset_content_type: application/java-archive
